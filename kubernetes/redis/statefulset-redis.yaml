# StatefulSet for Redis High Availability with sentinel
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      initContainers:
      - name: config
        image: redis:alpine
        command: [ "sh", "-c" ]
        args:
          - |
            # Set below to true if using redis x509
            REDISX509=false
            TLSPARAMETERS="--tls --cacert /certs/ca.crt"
            if $REDISX509; then
                TLSPARAMETERS="$TLSPARAMETERS --cert /certs/tls.crt --key /certs/tls.key"
            fi
            echo "Copying configuration file"
            cp /tmp/redis/redis.conf /etc/redis/redis.conf            
            if [ "$(redis-cli $TLSPARAMETERS -h sentinel -p 5000 ping)" != "PONG" ]; then
              echo "Sentinel not found to get the master info, defaulting to redis-0"
              if [ "$(hostname)" == "redis-0" ]; then
                echo "This is redis-0, No need to update config."
              else
                echo "This is not redis-0, Updating redis.conf. finding master FQDN"
                MASTER_FDQN=`hostname  -f | sed -e 's/redis-[0-9]\./redis-0./'`
                echo "REPLICAOF $MASTER_FDQN 6379" >> /etc/redis/redis.conf
              fi
            else
              echo "Sentinel found, finding master"
              MASTER="$(redis-cli $TLSPARAMETERS -h sentinel -p 5000 sentinel get-master-addr-by-name mymaster | grep -E '(^redis-\d{1,})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})')"
              echo "Master got: $MASTER, updating this in redis.conf"
              echo "REPLICAOF $MASTER 6379" >> /etc/redis/redis.conf
            fi
        volumeMounts:
        - name: redis-certs
          mountPath: /certs/
        - name: redis-config
          mountPath: /etc/redis/
        - name: config
          mountPath: /tmp/redis/
      containers:
      - name: redis
        image: redis:alpine
        command: ["redis-server"]
        args: ["/etc/redis/redis.conf"]
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: redis-certs
          mountPath: /certs/
        - name: redis-config
          mountPath: /etc/redis/
        - name: config-acl
          mountPath: /conf/acl/
      volumes:
      - name: redis-certs
        secret:
          secretName: redis-certs
          items:
          - key: ca.crt
            path: ca.crt
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
      - name: redis-config
        emptyDir: {}
      - name: config
        configMap:
          name: redis-config
      - name: config-acl
        configMap:
          name: redis-acl